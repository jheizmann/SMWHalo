Index: extensions/SemanticMediaWiki/includes/datavalues/SMW_DV_WikiPage.php
===================================================================
--- extensions/SemanticMediaWiki/includes/SMW_DV_WikiPage.php	2010-06-07 09:48:39.000000000 +0200
+++ extensions/SemanticMediaWiki/includes/SMW_DV_WikiPage.php	2010-07-08 11:10:37.000000000 +0200
@@ -118,6 +118,7 @@
 		$this->m_namespace = array_key_exists( 1, $args ) ? $args[1]:$this->m_fixNamespace;
 		$this->m_interwiki = array_key_exists( 2, $args ) ? $args[2]:'';
 		$this->m_sortkey   = array_key_exists( 3, $args ) ? $args[3]:'';
+		$this->m_fragment  = array_key_exists( 4, $args ) ? $args[4]:'';
 		$this->m_textform = str_replace( '_', ' ', $this->m_dbkeyform );
 		$this->m_id = false;
 		$this->m_title = null;
@@ -166,6 +167,21 @@
 		} elseif ( $this->m_namespace == NS_IMAGE ) { // embed images instead of linking to their page
 			 return '[[' . str_replace( "'", '&#x0027;', $this->getPrefixedText() ) . '|' . $this->m_textform . '|frameless|border|text-top]]';
 		} else { // this takes care of all other cases, esp. it is right for Media:
+			if ( $this->m_fragment != NULL) {
+				if (strpos($this->m_fragment, "##") === false) {
+					// only fragment set
+					$fragment = $this->m_fragment;
+					$label = $this->m_textform;
+				} else {
+					// fragment set with alternative label encoded
+					list($label, $fragment) = explode("##",$this->m_fragment);
+				}
+			} else {
+				// no fragment at all set
+				$label = $this->m_textform;
+				$fragment = "";
+			}
+			$fragment = str_replace("'", '&#x0027;', $fragment);
 			return '[[:' . str_replace( "'", '&#x0027;', $this->getPrefixedText() ) . '|' . $this->m_textform . ']]';
 		}
 	}
@@ -369,8 +385,8 @@
 	/**
 	 * @deprecated Use setDBkeys()
 	 */
-	public function setValues( $dbkey, $namespace, $id = false, $interwiki = '', $sortkey = '' ) {
-		$this->setDBkeys( array( $dbkey, $namespace, $interwiki, $sortkey ) );
+	public function setValues( $dbkey, $namespace, $id = false, $interwiki = '', $sortkey = '', $fragment = '' ) {
+		$this->setDBkeys( array( $dbkey, $namespace, $interwiki, $sortkey, $fragment ) );
 	}

 }
Index: extensions/SemanticMediaWiki/includes/SMW_DataValue.php
===================================================================
--- extensions/SemanticMediaWiki/includes/SMW_DataValue.php	2010-06-07 09:49:10.000000000 +0200
+++ extensions/SemanticMediaWiki/includes/SMW_DataValue.php	2010-07-08 11:13:22.000000000 +0200
@@ -111,6 +111,28 @@
 	 */
 	private $mErrors = array();

+	/// Patch:KK|Metadata data|Start
+	private $m_metadata = array();
+	private $m_metadataTypes = array();
+
+	public function setMetadata($mdProperty, $mdType, $mdValue) {
+		$this->m_metadata[$mdProperty] = $mdValue;
+		$this->m_metadataTypes[$mdProperty] = $mdType;
+	}
+
+	public function getMetadata($mdProperty) {
+		return array_key_exists($mdProperty, $this->m_metadata) ? $this->m_metadata[$mdProperty] : '';
+	}
+
+	public function getMetadataType($mdProperty) {
+		return array_key_exists($mdProperty, $this->m_metadataTypes) ? $this->m_metadataTypes[$mdProperty] : '';
+	}
+
+	public function getMetadataMap() {
+		return $this->m_metadata;
+	}
+	/// Patch:KK|Metadata data|End
+
 	/**
 	 * Boolean indicating if there where any errors.
 	 * Should be modified accordingly when modifying $mErrors.
Index: extensions/SemanticMediaWiki/skins/SMW_sorttable.js
===================================================================
--- extensions/SemanticMediaWiki/skins/SMW_sorttable.js	2010-06-07 09:48:41.000000000 +0200
+++ extensions/SemanticMediaWiki/skins/SMW_sorttable.js	2010-07-08 11:15:42.000000000 +0200
@@ -85,9 +85,8 @@
 	for (var i=0;i<spans.length;i++) {
 	    if(spans[i].className=="smwsortkey") return spans[i].innerHTML;
 	}
-    }else{
-	return el.innerHTML;
     }
+    return el.innerHTML;

 }

