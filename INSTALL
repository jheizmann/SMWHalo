[[SMWHalo 1.6.0]]

Install instructions for the latest version of SMWHalo are also online:

 http://smwforum.ontoprise.com/smwforum/index.php/Help:Installing_Halo_Extension_1.6.0

For the full manual of the Halo Extension have a look at:

 http://smwforum.ontoprise.com/smwforum/index.php/Help:Halo_extension

For further customizing your installation, take a look at:

 http://smwforum.ontoprise.com/smwforum/index.php/Help:Customizing_SMW%2B_1.6.0

For install instructions and further information on Semantic MediaWiki, please visit

 http://semantic-mediawiki.org/wiki/Help:Administrator_manual

------------------------------------------------------------------------------------------
IMPORTANT for updators from SMWHalo 1.5.6 or lower
 
 (1) The variable names have CHANGED! The prefix is now $smwgHalo... instead of $smwg...
     This was done to make them distinguishable from the SMW global variables.
 
 (2) enableSMWHalo() does not take parameters anymore. See in section "Configuring a 
     triplestore" how triplestores are configured now. 

------------------------------------------------------------------------------------------
Contents:
* Disclaimer
* Requirements
* Installation
  ** Installing Help
  ** Testing your Installation
  ** Customizing Semantic MediaWiki+
* Notes on Upgrading
* Contact

== Disclaimer ==

For a proper legal disclaimer, see the file "COPYING".

In general, the extension can be installed into a working wiki without
making any irreversible changes to the source code or database, so you
can try out the software without much risk (though no dedicated uninstall
mechanism is provided). Every serious wiki should be subject to regular
database backups! If you have any specific questions, please contact
the authors.

== Requirements (unbundled) ==

 * PHP 5.2 or PHP 5.3
 * MediaWiki 1.17.x (see installation guide)
 * ScriptManager 1.6.0 (see installation guide)
 * Semantic MediaWiki 1.6.1 (see installation section in SemanticMediaWiki/INSTALL)
 * ARC Library 1.6.0 (see installation guide)
 * Wiki Admin tool 1.6.0 (see installation guide)
 * Web browser (for clients, recommended Firefox 3.x or Internet Explorer 8. There might be glitches with other browsers)

== Requirements (bundled) ==

 * PHP 5.2.x or PHP 5.3.x
 * MediaWiki 1.17.x (see installation guide)
 * Semantic MediaWiki 1.6.1 (see installation section in SemanticMediaWiki/INSTALL)
 * Wiki Admin tool 1.6.0 (see installation guide)
 * Web browser (for clients, recommended Firefox 4/5 or Internet Explorer 8. There might be glitches with other browsers)

== Installation ==

We recommend to install the Halo Extension using the SMW+ Administration tool
which is part of the Wiki Admin tool (Download: 
https://sourceforge.net/projects/halo-extension/files/wikiadmintool-1.6.0_0.zip/download). 
It empowers the convenient administration and automatic setup of extensions for
MediaWiki and Semantic MediaWiki. If you upgrade an existing installation of
SMW+, also read the remarks in the section "Notes on Upgrading" below.

 
(1) Download and install the ScriptManager extension into your Mediawiki
    installation.  In case you have the bundled version you can skip this step.
    
(2) Download and install the ARCLibrary extension into your Mediawiki
    installation. In case you have the bundled version you can skip this step.
    
(2) Download and install the Wiki Admin tool into your Mediawiki
    installation. Extract the ZIP archive to the root directory of MediaWiki.

(3) Extract the smwhalo ZIP archive to the root directory of MediaWiki.

(4) Edit the configuration file <mw-dir>\LocalSettings.php

(5)	Add the following code in a place before any other extension is loaded. This
    initializes the ScriptManager and the ARCLibrary extension first, so that
    all following extensions make use of these two that are already available.

     require_once("deployment/Deployment.php");
	 require_once("extensions/ScriptManager/SM_Initialize.php");
	 require_once("extensions/ARCLibrary/ARCLibrary.php");
     enableARCLibrary();

(6) Change $wgDefaultSkin='ontoskin3';

(7) Add following lines to initialize the Halo Extension after the lines where all the required extensions are loaded:

	include_once('extensions/SMWHalo/includes/SMW_Initialize.php');
	enableSMWHalo();
	$wgUseAjax=true;

(8) Open a command-line interface

(9) Navigate to the directory
     <mw-dir>\extensions\SMWHalo\maintenance\

(10) Run the script SMW_setup.php to initialize the database tables

(11) Open a command-line interface to install the patches.
     The files patch*.txt are Eclipse patch files which can be installed using the
     tool patch.php (located in deployment/tools) 
     which itself uses GNU patch. The patch files are located in the 
     directory 'extensions\SMWHalo'.
     They are named with respect to the extension that is patched and
     the version of that extension. For instance, patch_for_MW_1.17.0.txt patches
     version 1.17.0 of MediaWiki. Please choose the correct version when applying
     the patches in the following steps.

(12) Patch MediaWiki:
     php patch.php -p patch_for_MW<version>.txt -d <mw-dir> --onlypatch
     Replace <mw-dir> with the absolute path of your Mediawiki installation and 
     choose the correct version of the patch file for <version>.
     
(13) Patch SemanticMediaWiki:
     php patch.php -p patch_for_SMW<version>.txt -d <mw-dir> --onlypatch
     Replace <mw-dir> with the absolute path of your Mediawiki installation and 
     choose the correct version of the patch file for <version>.

(14) Patch SemanticForms (if installed and not yet patched):
     php patch.php -p patch_for_SF2.0.8.txt -d <mw-dir> --onlypatch
     Replace <mw-dir> with the absolute path of your Mediawiki installation.

(15) Optional patch for additional builtin properties:
     php patch.php -p patch_for_builtin_properties_SMW_<version>.txt -d <mw-dir> --onlypatch
     Replace <mw-dir> with the absolute path of your Mediawiki installation and 
     choose the correct version of the patch file for <version>.

Notes on patches: http://smwforum.ontoprise.com/smwforum/index.php/Help:Installing_Halo_extension_1.5.3#Notes_on_patches

     
-----------------------------------------------------------------------------------------------

Note: 	Replace < mw-dir > with the path to root directory of MediaWiki.

-----------------------------------------------------------------------------------------------

Note: 	If you are using Linux, make the smwadmin.sh executable (chmod +x smwadmin.sh)

-----------------------------------------------------------------------------------------------



=== Testing your Installation ===

If you are uncertain that everything went well, you can do some testing steps to
check if SMW is set up properly.

Go to the Special:Version page and you should see SMW+ Extension (version nn)
listed as a Parser Hook.

Create a regular wiki page named "TestSMW", and in it enter the wiki text
  Property test:  [[testproperty::Dummypage]]
  [[Category:Test]]

Then, create the page "Category:Test" and insert some dummy text.

Go to Special:DataExplorer. As soon as the interface is loaded, you should see
"Test" in the category tree. Click on it and you should see "TestSMW" in the
instance view. Click on it, and you should see "testproperty   Dummypage" in the
properties view.

If you don't get these results, check the steps in the installation section, consult
the FAQ section, then contact the user support list (see the Contact section).

=== Options ===

1.  Uses EDITDISTANCE function for near matching.
    Take a look in libs/mysqlUDFs/INSTALL.TXT for more information.
    $smwgHaloUseEditDistance = true;

2.  Show derived facts in a tab next to explicit facts. Makes only sense when a
    TSC is connected. Note that the factbox must be switch on.
    Refer to SemanticMediaWiki/includes/Settings.php
    $smwgHaloShowDerivedFacts=true;

3.  $smwgHaloPropertyPageFromTSC: Reads annotations on property pages from the TSC,
    not from the MySQL store.
    
4.  One may use the OntologyBrowser to modify the ontology. Specify the appropriate 
	rights (in this example for the WikiSysop) for modifying the ontology, otherwise 
	you can only browse through.

	   $wgGroupPermissions['sysop']['ontologyediting'] = true;

6.  If you protect your wiki with a htaccess file and use the Auth Digest method
    then you need to set the http password in the variable $smwgHaloHttpAuthPassword.
    The username will be taken from the http request, and is not set here.

        $smwgHaloHttpAuthPassword='your password';

7.  $smwgHaloRedLinkWithCreateNewPage: Boolean, can be set to true, default is false.
    You can allow the wiki to modify the red links so that the user is sent to a
    custom wiki page. This page (called Create_new_page) contains a dialogue where
    the user can select on how he wants to add new content to the wiki. More
    information about this feature can be found at:
    http://smwforum.ontoprise.com/smwforum/index.php/Help:Creating_a_new_page_1.5.3
    This feature will not be used when $smwgHaloNEPEnabled is set in the LocalSettings.

8.  $smwgHaloQueryInterfaceHost4Wysiwyg: optional string for the hostname, default
    is undefined. Use this option when the Query Interface cannot be opened in
    the WYSIWYG editor. This can happen when the URL to access the wiki from
    outside is different as when accessing the wiki from the server itself. The
    latter is done to get the page content of the Query Interface when it's
    openend from within the wiki itself (e.g. the WYSIWYG editor or the Semantic
    Toolbar).

9. $smwgHaloQueryInterfaceSecret: optional string for a hash, default is undefined.
    This option is needed when you block your wiki for anonymous reading access.
    When opening the Query Interface inside the WYSIWYG extension the access is
    done without sending the authentication token, therefore the access must be
    checked by creating authentication tokens by a random string and this
    secret, so that the Query Interface cannot be accessed as an anonymous user.
    
10. $smwgHaloSPARQLPropertyPrintout = true/false
    This option denotes if SPARQL variable names are interpreted as properties 
    if they exist with the same name. If so, the values must match the type of 
    this properties otherwise they are not shown in query results. If set to false
    the types are ignored. Besides this global settings, the user can specify the option
    'useproperty=true/false' as a query parameter. This overwrites the global setting.

=== Configuring a triplestore ===
Add to LocalSettings.php:

    $smwgHaloWebserviceEndpoint="localhost:8080";
    
Optional:

    $smwgHaloTripleStoreGraph = 'graph-uri';

graph-uri is an arbitrary URI which works as an identifier for the wiki in the
TSC. Every URI is possible as long as it does not contain a hash character (#).
If it is not set 'http://mywiki' is the default.

If the webserver requires (Basic) HTTP authorization, add:

    $smwgHaloWebserviceUser = "username";
    $smwgHaloWebservicePassword = "password";

You may now initialize the TSC on the page Special:TSA. Refer to the triplestore
documentation for a better way of initialization.

=== Customizing Semantic MediaWiki+ ===

Semantic MediaWiki can be customized by a number of settings. To do so, you
can set respective parameters somewhere below the line
"include_once('extensions/SMWHalo/includes/SMW_Initialize.php'); "
in your LocalSetting.php. For example, one can write

 include_once('extensions/SMWHalo/includes/SMW_Initialize.php');
 $smwgHaloPropertyPageFromTSC = true;

to have the content of property pages read from the TSC. There are several settings
which are documented here:

http://smwforum.ontoprise.com/smwforum/index.php/Help:Customizing_SMW%2B

=== Renaming categories in the Data Explorer ===

By default Mediawiki doesn't allow the move operation on categories. When a
category is renamed, this is a move operation internally. Therefore if you want
to rename categories in the Data Explorer a Mediawiki file must be mdofied to
achieve this. Please edit the file includes/Namespace.php in your wiki
installation. Replace the line:

  return !( $index < NS_MAIN || ($index == NS_FILE && !$wgAllowImageMoving)  || $index == NS_CATEGORY );

with:

  return !( $index < NS_MAIN || ($index == NS_FILE && !$wgAllowImageMoving) );

The location of this content is around line 50ff.

If you have installed the RichMedia extension the changes have been applied
already and you don't need to do anything.


== Notes on Upgrading ==

=== Upgrading from earlier versions ===

In order to create new tables and update old ones, open a command-line interface
and navigate to the directory $IP/extensions/SemanticMediaWiki/maintenance/. Then
run the script SMW_setup.php to update the database tables.

In addition, run the script SMW_refreshData.php, which is located in the same directory.

Since SMWHalo 1.5.x the ScripManager extension is required. This is a small
extension that handles the include of some general Javascript libraries such as
Prototype or jQuery. These libraries are needed within the SMWHalo extension and
other extensions of the Halo project. If these libraries are not included in the
correct order on the webpage, the javascripts that are used on this page might
not work correctly or do not work at all. The ScriptManager eliminates the fact
that each extension must include it's own version of these libraries and that
each of these libraries is included only once.

== Contact ==

http://sourceforge.net/projects/halo-extension
  Sourceforge download site with mailing lists as well as user and
  developer forums.

http://smwforum.ontoprise.com/smwforum/index.php
  The user forum hosts the community around SMW and SMW+. It contains
  documentation as well as use cases, best practices and other helpful
  stuff. Feel free to join and collaborate!

=== Using the DataAPI ===
Please have a look at ./DataAPI/INSTALL if you want to use the DataAPI

If you have any inquiries concerning SMW+, please contact info@ontoprise.de
