[[question:=How can I query the triple store]]?

[[discourseState:=Main:view]]

[[description:=Use the #sparql parser function, just like you would use #ask.]]

==Query a triple store==
You may query the triple store either in SPARQL or ASK syntax using the ''#sparql'' parser function. SPARQL is a common W3C standard to query RDF graphs. It's more powerful than ASK but not that intuitive. Every ASK query can be formulated in SPARQL but not vice versa. In fact, an ASK query used in the ''#sparql'' parser function gets transformed into SPARQL. It's recommended that you use ASK unless your query cannot be formulated in that.

=== SPARQL queries ===
Example:
<pre>
{{#sparql: SELECT ?car ?engine WHERE { ?car rdf:type cat:Car . ?x prop:hasEngine ?engine . ?car prop:HasDoors ?doors. FILTER (?doors > 3) } |?car=Car|?engine=Has Engine }}
</pre>
Queries for all instances of Car which have an engine and more than 3 doors. 

;Predefined prefixes
The following prefixes are predefined and so do not need to be specified manually:
*cat (Categories)
*prop (Properties)
*a (Articles aka Instances)
*rdf (RDF)

A complete documentation of SPARQL you can find [http://www.w3.org/TR/rdf-sparql-query/ here].

=== ASK queries ===
Example:
<pre>
{{#sparql: [[category:Car]][[hasEngine::+]][[HasDoors::>3]]|?=Car|?hasEngine=Has Engine }}
</pre>
Note: The ASK/SPARQL converter does currently not accept abbreviated syntax for subqueries, ie. something like <nowiki>[[prop1.prop2.prop3::value]]</nowiki> is NOT possible. However, you may formulate the query using normal subquery syntax.