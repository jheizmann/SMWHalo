__NOTOC__
Properties and types are the basic way of entering semantic data in Semantic MediaWiki. Properties can be viewed as "categories for values in wiki pages". They are used by a simple mark-up, similar to the syntax of links in MediaWiki:

: <tt><nowiki>[[</nowiki>''property name''::''value''<nowiki>]]</nowiki></tt>

This statement defines a <tt>''value''</tt> for the property of the given <tt>''property name''</tt>. The page where this is used will just show the text for <tt>''value''</tt> and not the property assignment.

Existing links can be directly augmented with such property information, while other types of data (such as numbers or calendar dates) need an additional editing step. 

== Turning Links into Properties ==

Consider the [[wikipedia:Berlin|Wikipedia article on Berlin]]. This article contains many links to other articles, such as "Germany", "European Union", and "United States". However, the link to "Germany" has a special meaning: it was put there since Berlin is the capital of Germany. To make this knowledge available to computer programs, one would like to "tag" the link

 <nowiki>[[Germany]]</nowiki>

in the article text, identifying it as a link that describes a "capital property". With Semantic MediaWiki, this is done by putting a property name and "::" in front of the link inside the brackets, thus:

 <nowiki>[[capital of::Germany]]</nowiki>

In the article, this text still is displayed as a simple hyperlink to "Germany". The additional text <tt>capital of</tt> is the name of the property that classifies the link to Germany. As in the case of categories, the name of the property is arbitrary, but users should try to re-use properties that already appear elsewhere.

To simplify this re-use, every property has its own article in the wiki, just as every category has an article.  You can see all the properties in use in the wiki with the [[Special:Properties]] page. Just as category articles are prefixed with <tt>Category:</tt>, all property articles are prefixed with <tt>Property:</tt> to distinguish them from other articles. So you can also also use MediaWiki's [[Special:Search]] page to find existing properties. As with categories, a property's article can be empty, but it is strongly recommended to add a description that explains the intent of the property and its proper usage.

There are various ways of adding properties to pages:

{| border="1" cellpadding="2" cellspacing="0"
 ! What it does 
 ! What you type
 |-
 | Classify a [[Help:Links|link]] with the property "example property."
 | <pre><nowiki> Classify a [[example property::link]] with the property "example property."</nowiki></pre>
 |-
 | Make alternate text appear in place of the link.
 | <pre><nowiki>Make [[example property::link|alternate text]] appear in place of the link.</nowiki></pre>
 |-
 | To hide the property from appearing at all, use a space as the alternate text.
 | <pre><nowiki>To hide the property [[example property::link| ]] from appearing at all</nowiki>
use a space as the alternate text.</pre>

'''Note:''' The space after <nowiki>|</nowiki> is necessary. If left away, the MediaWiki [[wikipedia:Help:Pipe trick|pipe trick]] applies, but rarely with desirable effects. Even if a space is given, SMW will not print anything, which should be the desired result in most cases (to make a space appear in the text, use <tt>&amp;ndash;</tt> as a space symbol).
 |-
 | To make an ordinary link with "::" without creating a property, escape the markup with a colon in front, e.g. "The C++ :: operator". 
 | <pre><nowiki>The [[:C++ :: operator]].</nowiki></pre>
 |-
 | To assign one value to multiple properties, add "::" between each name. 
 | <pre><nowiki>e.g. [[property1::property2::link]]. </nowiki></pre>
|}

== Turning values in text into Properties ==

There is other useful information in wiki articles besides links to other articles.  For example, there is a number in the Berlin article giving its population.  To make this knowledge available to computer programs, one would like to "tag" the text

 3,396,990 

in the article, identifying it as a value for the "population property".  With Semantic MediaWiki, this is done by putting the property name and "::" in front of the text and surrounding it with <nowiki>[[ ]]</nowiki> brackets, thus:
 <nowiki>[[population::3,396,990]].</nowiki>

This works fine.  However, it creates a link to a ''3,396,990'' page, and having an article for every population value probably does not make sense.
Furthermore, if you wanted to create a list of all German cities ordered by population, numeric order is different from the alphabetical order that you would expect for article names. For example, in alphabetical order, "1,000,000" comes before "345".

=== Types of Properties ===

We want to be able to tell Semantic MediaWiki that "population" is a number, not a link to a page in the wiki.  The way to do this is to specify a type for the "population" property.  Semantic MediaWiki has several built-in datatypes that we can choose for properties.  For our population example, the appropriate type would be "<tt>Type:Number</tt>"; the prefix "<tt>Type:</tt>" is again a separate namespace that distinguishes descriptive articles about types from normal pages.  We want to give property "population" a special property that specifies it has "type:number".  To support this Semantic MediaWiki has a built-in special property called "<tt>Has type</tt>". We use the same syntax for this special property as for any other property, so in the Property:Population article, we write:

 <nowiki>[[has type::number]]</nowiki>

(You don't need to specify the Type: namespace here.)

Semantic MediaWiki knows a number of special properties such as "<tt>Has type</tt>". Regardless of whether these properties have their own articles in the wiki, they have a special built-in meaning and are not evaluated like other properties.

=== Datatypes ===

Datatypes are very important for evaluating properties. Firstly, the datatype determines how tools should handle the given values, e.g. for displaying values and sorting values in search results. Secondly, the datatype is required to understand which values have the same meaning, e.g. the values "1532", "1,532", and "1.532e3" all encode the same number. Finally, some datatypes have special behavior, as will be described below. For these reasons, every property has a datatype, listed on the [[Special:Properties]] page.

The reason we didn't have to specify a datatype for the "capital of" property above
is that the default datatype is <tt>Type:Page</tt>, which displays as a link.
(Note that if you change the datatype of a property later on it does not affect the annotations of existing articles until they are saved again or purged.)
Even though <tt>Type:Page</tt> is the default,
you should explicitly specify a datatype for every property, 
just to prevent confusion or later redefinition with an unintended type.

The same mark-up for properties that are links to pages also works for properties of other datatypes.  Here are some more examples.

{| border="1" cellpadding="2" cellspacing="0"
 ! What it does 
 ! What you type
 |-
 | Assign the value 1,234,567 to the property "example."
 | <pre><nowiki>Assign the value [[example::1,234,567]] to the property "example."</nowiki></pre>
 |-
 | Assign a numeric value, but showing different text in the article.
 | <pre><nowiki>Assign a value of [[example::999,331|about a million]], 
but showing different text in the article.</nowiki></pre>
 |-
 | Specifying the type in a property's article, e.g.<br/>This property is a number.
 | <pre><nowiki>This property is a [[has type::number]].</nowiki></pre>
 |- 
 | Combining MediaWiki markup with property values, e.g.<br/>John's username is [mailto:john@example.com john]<br/>''Hint: Use a [[Help:Semantic templates|template]] for this.''
 | <pre><nowiki>John's username is [[username::john|[mailto:john@example.com john]]].</nowiki></pre>
|}

== Datatypes and Units of Measurement ==

Using different types, properties can be used to describe very different kinds of values. A complete list of available types is available from the special page <tt><nowiki>Special:Types</nowiki></tt>. Basic types include:
* <tt>Type:String</tt> &ndash; Text strings (limited to 255 characters)
* <tt>Type:Number</tt> &ndash; Integer and decimal numbers with optional exponent
* <tt>Type:Page</tt> &ndash; Links to pages (the default)
These can be used creatively for very different purposes. For instance, properties of type string can be used for encoding phone numbers (which could contain non-numeric symbols).

=== Units ===

<tt>Type:Number</tt> allows a unit after the numeric value to distinguish values (e.g., "30.3 mpg" versus "47 km/liter"), but does not know how to convert between them. To support automatic conversion and multiple unit formats, you can define your own datatype with custom units.  These automatically convert values to and from standard representations, so that users are free to use their preferred unit in each article yet still query and compare with property values in other articles. For more information, see [[Help:Custom_units|Custom units]].

=== Special Datatypes ===

There are some special built-in datatypes which support more complicated formats and unit conversions.

* <tt>Type:Boolean</tt> &ndash; Restricts the value of a property to true/false (also 1/0 and yes/no).
* <tt>Type:Code</tt> &ndash; Like <tt>Type:String</tt>, but displays its value in a HTML pre-formatted box. The value displays as regular text everywhere else (e.g., in query results).
* <tt>Type:Date</tt> &ndash; Specifies particular points in time. ''This type is still somewhat experimental, but may feature complex conversions between (historic) calendar models in the future.''
* <tt>Type:Geographic coordinate</tt> &ndash; Describes geographic locations. It recognizes different forms of geographic coordinates. Using service links it can dynamically provide links to online map services. For more information, see [[Help:Service_links|Service Links]].
* <tt>Type:Temperature</tt> &ndash; Can't be user-defined since converting temperature units is more complicated than multiplying by a conversion factor.
* <tt>Type:Text</tt> &ndash; Like <tt>Type:String</tt>, but can have unlimited length; the tradeoff is values of this type cannot be selection or sort criteria in queries. 

For specifying URLs and emails, there are some special variations of the string datatype:

* <tt>Type:URL</tt> &ndash; Displays an external link to its URL object.
* <tt>Type:Annotation URI</tt> &ndash; Properties of this type are interpreted as relations to external objects, denoted by the URI. They are special since they are interpreted as ''annotation properties'' on export.
* <tt>Type:Email</tt> &ndash;  Displays an e-mail address as a link (with <nowiki>mailto:</nowiki>).

SMW does not have an "enumerated" datatype; instead, for any property, you can limit its possible values by using the special property <tt>Property:Allows_value</tt> to enumerate its permitted values. This works for every datatype.

=== Properties with multiple types ===
In human language it is easy to introduce multiple facts at once.
For example, "John F. Kennedy was the 35th president of the U.S.A., serving from 1961 until his assassination in 1963."
This is information about John F. Kennedy that belongs in his wiki page,
but it shifts to information about his presidency.
You could simply have a property "Presidency_details" of Type:String and put the text in it.  But it will only be meaningful to humans, you can't query on it or sort it to produce a list of presidents.

You can't nest semantic annotations, so you cannot have a string property that contains additional annotations.

Often the best way to represent this is to create an article for the object of the property, so this can be annotated with the additional information.  So property "Has_presidency" would be of Type:Page, and then the article "Presidency of JFK" has properties Of_country::U.S.A., Count:35, Start_date:1961-01-20, End_date:1963-11-22, etc.
Wikipedia frowns on so-called "stub" articles, but in a semantic wiki they are appropriate as they provide information for semantic queries and browsing.

It is also possible to create a property in Semantic MediaWiki that takes multiple values,
these are sometimes called "n-ary relations".
So "Has_presidency" could have Type:Page; Type:Number; Type:Date; Type:Date,
where the four values are the country, the count of the presidency, the start date, and the end date.  See [[Help:Many-valued_Properties|Many-valued Properties]] for more information.

== Special properties ==

We mentioned the special property <tt>Has type</tt> that you use to tell SMW the datatype of a property.  SMW has other predefined special properties that have special meaning (even if you do not create property pages for them in your wiki).  You ''cannot'' use these names for your own properties, but you can use them in browsing and querying interfaces just like all other properties. For more information, see [[Help:Special_Properties|Special Properties]].

[[Category:Semantic MediaWiki Help Topic|Properties and Types]]
[[Category:SMW+ Help Topic|Properties and Types]]
[[SubsectionOf::Help:Advanced_Annotation_Mode| ]]
[[SubsectionOf::Help:Editing_Semantic_Data| ]]