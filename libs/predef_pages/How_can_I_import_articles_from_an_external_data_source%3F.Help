{{Helppage
|question=How can I import articles from an external data source?
|answer=Use the special page "Import of vocabulary".
|audience=End User
|component=semantic MediaWiki
|discourseState=Main:view
}}

===Introduction===

Companies that want to introduce a semantic wiki as new knowledge managements system often have their own vocabulary of specific ''terms'' that they want to be reflected in the wiki. This document describes the design of a new feature that allows importing existing terms into the wiki. 

There is no standard of how companies store and distribute their vocabulary. Thus a very flexible approach in form of a framework is needed. Software modules can be plugged into the framework to realize the import. Standard modules will provide standard solutions. Exceptional tasks can be solved with tailor-made modules that have to be developed by the wiki administrator.

This new functionality is accessible for sysops on the special page <code>Special:Import of vocabulary</code>.

=== Special: Import of vocabulary=== 

==== Selecting TLM and DAM ==== 
The first step of importing external vocabulary is selecting a transport layer module (TLM) and a data access module (DAM), where the set of DAMs depends on the currently selected TLM (see Figure 1). 
[[Image:REQ_VOC_1_001.png|center|thumb|728px|Figure 1: Select TLM and DAM with information about each module.]]

The Transport Layer (TL) offers the possibility for accessing local (already implemented) or remote sources, e.g. via Web Service. For the further specification a data access module is needed, that has direct access to the terms that make up the vocabulary. This modules could be ''Read from another Wiki'', ''Read from a database'' or ''Read from a CMS''. The first implementation of a data access module is ''ReadCSV'' for reading data from a local .CSV file. The modules can be implemented in any programming language, provided a corresponding module in the transport layer can communicate with them. 

==== Entering module-specific data ====
After selecting both modules, the user has to enter module-specific data. The screenshot shows the workflow for importing a .CSV file, therefore the only input for module-specific data is the filename as shown in Figure 2.
[[Image:REQ_VOC_1_002.png|center|thumb|951px|Figure 2: Enter file name (CSV import).]]

==== Import set ====
After submitting, the user has to choose an import set.
An ''import set'' is just a name for a set of terms that the module can extract e.g. different domains of knowledge like ''Biological terms'', ''Chemical terms'' etc. (see Figure 3).
[[Image:REQ_VOC_1_003.png|center|thumb|620px|Figure 3: Choose the import set.]]

==== Input policy ====
After that the user can define an input policy, a mapping template and a conflict policy. 
The set of terms to import can be restricted to a list of given items or the terms that match a regular expression or both. Both restrictions complement each other e.g. a term is imported if it is part of the list or matches the regular expression. 
Example: [Aa]* imports all terms that start with the letter A. Users can define as many input policies as they want. Therefore, the design shows a standard text input field, in which the user can enter the expression, and select the wanted radio button (RegEx or Term) as shown in Figure 4. 
[[Image:REQ_VOC_1_004.png|center|thumb|596px|Figure 4: Textfield for entering a regular expression or term.]]
By pressing the button (plus in a green circle), the policy is added to a list which appears right next to the button (see Figure 5).
[[Image:REQ_VOC_1_005.png|center|thumb|591px|Figure 5: Entered RegEx or Term appears in the list.]]
By selecting an input policy from the list and clicking the button (minus in a red circle) it can be deleted.

==== Mapping policy ====
The mapping policy is like a template for the articles that are created for terms. The policy is stored as a normal page in the wiki. The properties of the imported term appear like template parameters in a special <code>mapping</code> tag in the page. The mapping article can be defined in the appropriated text field (see Figure 6).
[[Image:REQ_VOC_1_006.png|center|thumb|448px|Figure 6: Define the mapping article.]]
With the links ''view'' and ''edit'' you can access the page and optionally edit it.

'''Example'''

<pre>
==Description==

<mapping properties="content">
{{{content}}}
</mapping>

<mapping properties="author">
==About this term==
This term was defined by [[author::{{{author}}}]].
</mapping>
</pre>

==== Conflict policy ====
Import jobs can be run several times. A conflict occurs when a term for an already existing article is imported. The conflict policy controls if the article is overwritten or if the new version is ignored. This is handled by a dropdown menu and shown in Figure 7.
[[Image:REQ_VOC_1_007.png|center|thumb|606px|Figure 7: Choose the conflict policy.]]

==== Specification of the data to import====
A lists of properties controls which parts are imported. You can select the wanted attributes by activating the select box in front of the attribute. The list must contain at least the articleName, so you are not allowed to deselect the articleName. This list is displayed in Figure 8. 
[[Image:REQ_VOC_1_008.png|center|thumb|366px|Figure 8: Select attributes for import.]]

====Preview====
In Figure 9 a preview of the articles that would be created/updated in the Wiki is shown.
[[Image:REQ_VOC_1_009.png|center|thumb|355px|Figure 9: Preview of the articles to be imported.]]
This preview (see Figure 10) is refreshed every time the import set or the input policy has changed. So i.e. this is the preview after entering ''Cell'' as a term in the input policy:
[[Image:REQ_VOC_1_010.png|center|thumb|353px|Figure 10: Updated preview after setting 'Cell' as an input policy.]]

====Doing the import====
After all the necessary input is done you can start the import bot by pressing 'Click to start the import' (see Figure 11). You have to be logged in as an wiki SysOp to start the import bot.
[[Image:REQ_VOC_1_012.png|center|thumb|194px|Figure 11: Start the import.]]

====Control in the Gardening====
At the Gardening page you can control the status of the started bot (see Figure 12):
[[Image:REQ_VOC_1_013.png|center|thumb|837px|Figure 12: Check the Gardening page for details.]]
And in the gardening log (shown in Figure 13) you have an overview about the created articles:
[[Image:REQ_VOC_1_014.png|center|thumb|620px|Figure 13: Information about the imported articles in the gardening log.]]

====View the article====
In our example an article named 'Cell' is created (see Figure 14):
[[Image:REQ_VOC_1_015.png|center|thumb|491px|Figure 14: The article Cell, which is created by the import bot.]]
