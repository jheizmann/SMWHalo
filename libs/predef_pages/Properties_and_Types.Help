__NOTOC__
Properties are the basic way of entering semantic data in SMW+. They are inserted into wiki articles by using by a simple markup, similar to the syntax of links in MediaWiki: 

<pre><nowiki>[[property name::value]]</nowiki></pre>

This statement defines a value for the property of the given property name. The page where this is used will just show the text for value and not the property assignment. Existing links can be directly augmented with such property information, while other types of data (such as numbers or calendar dates) need an additional editing step.

== Types of Properties ==

However, the value of a property is not always another article in the wiki. For example, in the statement <tt><nowiki>[[population:3,400,000]]</nowiki></tt> we want to be able to tell SMW+ that "population" is a number, not a link to a page in the wiki, which is the default setting. The way to do this is to specify a type for the <tt>population</tt> property. 

SMW+ has several built-in datatypes available for properties. For the population example, the appropriate type is called <tt>Type:Number</tt>; the prefix "Type:" is again a separate namespace that distinguishes descriptive articles about types from normal pages. We want to give the property <tt>population</tt> a special property that specifies it has type <tt>number</tt>.  To support this SMW+ has a built-in special property called <tt>Has type</tt>. Note that the same syntax is used for this special property as for any other property, so in the article <tt>Property:Population</tt>, we write: <tt><nowiki>[[has type::Type:Number]]</nowiki></tt>.

SMW+ has a number of special properties such as <tt>Property:has type</tt>. Regardless of whether these properties have their own articles in the wiki, they have a special built-in meaning and are not evaluated like other properties.

== Datatypes and Units of Measurement ==

Using different types, properties can be used to describe very different kinds of values. A complete list of available types is available from the special page <tt><nowiki>Special:Types</nowiki></tt>. Basic types include:
* <tt>Type:String</tt> &ndash; Text strings (limited to 255 characters)
* <tt>Type:Number</tt> &ndash; Integer and decimal numbers with optional exponent
* <tt>Type:Page</tt> &ndash; Links to pages (the default)
These can be used creatively for very different purposes. For instance, properties of type string can be used for encoding phone numbers (which could contain non-numeric symbols).

=== Units ===

<tt>Type:Number</tt> allows a unit after the numeric value to distinguish values (e.g., "30.3 mpg" versus "47 km/liter"), but does not know how to convert between them. To support automatic conversion and multiple unit formats, you can define your own datatype with custom units.  These automatically convert values to and from standard representations, so that users are free to use their preferred unit in each article yet still query and compare with property values in other articles. For more information, see [http://semantic-mediawiki.org/wiki/Help:Custom_units Custom units] at the Semantic MediaWiki Web site.

=== Special Datatypes ===

There are some special built-in datatypes which support more complicated formats and unit conversions.

* <tt>Type:Boolean</tt> &ndash; Restricts the value of a property to true/false (also 1/0 and yes/no).
* <tt>Type:Code</tt> &ndash; Like <tt>Type:String</tt>, but displays its value in a HTML pre-formatted box. The value displays as regular text everywhere else (e.g., in query results).
* <tt>Type:Date</tt> &ndash; Specifies particular points in time. ''This type is still somewhat experimental, but may feature complex conversions between (historic) calendar models in the future.''
* <tt>Type:Geographic coordinate</tt> &ndash; Describes geographic locations. It recognizes different forms of geographic coordinates. Using service links it can dynamically provide links to online map services. For more information, see [http://semantic-mediawiki.org/wiki/Help:Service_links Service Links] at the Semantic MediaWiki Web Site. 
* <tt>Type:Temperature</tt> &ndash; Can't be user-defined since converting temperature units is more complicated than multiplying by a conversion factor.
* <tt>Type:Text</tt> &ndash; Like <tt>Type:String</tt>, but can have unlimited length; the tradeoff is values of this type cannot be selection or sort criteria in queries. 

For specifying URLs and emails, there are some special variations of the string datatype:

* <tt>Type:URL</tt> &ndash; Displays an external link to its URL object.
* <tt>Type:Annotation URI</tt> &ndash; Properties of this type are interpreted as relations to external objects, denoted by the URI. They are special since they are interpreted as ''annotation properties'' on export.
* <tt>Type:Email</tt> &ndash;  Displays an e-mail address as a link (with <nowiki>mailto:</nowiki>).

SMW does not have an "enumerated" datatype; instead, for any property, you can limit its possible values by using the special property <tt>Property:Allows_value</tt> to enumerate its permitted values. This works for every datatype.

== Miscellaneous Types ==

SMW+ has two additional pseudo-types of properties: <tt>transitive</tt> and <tt>symmetric</tt>. These types can be selected in the [[Help:Semantic_Toolbar|Semantic Toolbar]] when editing a property page. Selecting one of these characteristics simply means that the property will be added to the <tt>Category:Symmetrical_properties</tt> or <tt>Category:Transisitve_properties</tt>, respectively. 

* <tt>Symmetric</tt> &ndash; Being tagged as symmetric usually means that for any <tt>x</tt> and <tt>y</tt> the following statement applies: <tt>P(x,y) iff P(y,x)</tt>. For example, the property <tt>adjacent Region</tt> is symmetric, while <tt>located in</tt> is not, for if Berlin is located in Germany, it would be unintelligible to state that Germany is located in Berlin.
* <tt>Transitive</tt> &ndash; Being tagged as transitive usually means that for any <tt>x</tt>, <tt>y</tt>, and <tt>z</tt> the following statement applies: <tt>P(x,y) and P(y,z) implies P(x,z)</tt>. For example, the property <tt>located in</tt> is transitive, for if Berlin is located in Germany and the Berlin district Tiergarten is located in Berlin, then Tiergarten is also located in Germany.
