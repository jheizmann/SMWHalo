Index: extensions/SemanticMediaWiki/includes/SMW_DV_WikiPage.php
===================================================================
--- extensions/SemanticMediaWiki/includes/SMW_DV_WikiPage.php	(revision 6679)
+++ extensions/SemanticMediaWiki/includes/SMW_DV_WikiPage.php	(working copy)
@@ -61,16 +61,16 @@
 		switch ($typeid) {
 			case '__typ':
 				$this->m_fixNamespace = SMW_NS_TYPE;
-			break;
+				break;
 			case '_wpp' : case '__sup':
 				$this->m_fixNamespace = SMW_NS_PROPERTY;
-			break;
+				break;
 			case '_wpc' : case '__suc': case '__sin':
 				$this->m_fixNamespace = NS_CATEGORY;
-			break;
+				break;
 			case '_wpf' : case '__spf':
 				$this->m_fixNamespace = SF_NS_FORM;
-			break;
+				break;
 			default: //case '_wpg':
 				$this->m_fixNamespace = NS_MAIN;
 		}
@@ -86,7 +86,7 @@
 				wfLoadExtensionMessages('SemanticMediaWiki');
 				$this->addError(wfMsgForContent('smw_notitle', $value));
 			} elseif ( ($this->m_fixNamespace != NS_MAIN) &&
-				 ($this->m_fixNamespace != $this->m_title->getNamespace()) ) {
+			($this->m_fixNamespace != $this->m_title->getNamespace()) ) {
 				wfLoadExtensionMessages('SemanticMediaWiki');
 				$this->addError(wfMsgForContent('smw_wrong_namespace', $wgContLang->getNsText($this->m_fixNamespace)));
 			}
@@ -116,6 +116,7 @@
 		$this->m_namespace = array_key_exists(1,$args)?$args[1]:$this->m_fixNamespace;
 		$this->m_interwiki = array_key_exists(2,$args)?$args[2]:'';
 		$this->m_sortkey   = array_key_exists(3,$args)?$args[3]:'';
+		$this->m_fragment   = array_key_exists(4,$args)?$args[4]:'';
 		$this->m_textform = str_replace('_', ' ', $this->m_dbkeyform);
 		$this->m_id = false;
 		$this->m_title = null;
@@ -133,7 +134,7 @@
 			return $this->getCaption();
 		} else {
 			return '[[:' . str_replace("'", '&#x0027;', $this->getPrefixedText()) .
-			        ($this->m_fragment?"#$this->m_fragment":'') . '|' . $this->getCaption() . ']]';
+			($this->m_fragment?"#$this->m_fragment":'') . '|' . $this->getCaption() . ']]';
 		}
 	}
 
@@ -162,9 +163,24 @@
 		if ( ($linked === null) || ($linked === false) || ($this->m_outformat == '-') ) {
 			return $this->m_fixNamespace == NS_MAIN?$this->getPrefixedText():$this->getText();
 		} elseif ($this->m_namespace == NS_IMAGE) { // embed images instead of linking to their page
-			 return '[[' . str_replace("'", '&#x0027;', $this->getPrefixedText()) . '|' . $this->m_textform . '|frameless|border|text-top]]';
+			return '[[' . str_replace("'", '&#x0027;', $this->getPrefixedText()) . '|' . $this->m_textform . '|frameless|border|text-top]]';
 		} else { // this takes care of all other cases, esp. it is right for Media:
-			return '[[:' . str_replace("'", '&#x0027;', $this->getPrefixedText()) . '|' . $this->m_textform . ']]';
+			if ( $this->m_fragment != NULL) {
+				if (strpos($this->m_fragment, "##") === false) {
+					// only fragment set
+					$fragment = $this->m_fragment;
+					$label = $this->m_textform;
+				} else {
+					// fragment set with alternative label encoded
+					list($label, $fragment) = explode("##",$this->m_fragment);
+				}
+			} else {
+				// no fragment at all set
+				$label = $this->m_textform;
+				$fragment = "";
+			}
+			$fragment = str_replace("'", '&#x0027;', $fragment);
+			return '[[:' . str_replace("'", '&#x0027;', $this->getPrefixedText()) . ($this->m_fragment != NULL ? "#".$fragment : "") . '|' . $label  . ']]';
 		}
 	}
 
@@ -241,14 +257,14 @@
 				} else { // Medialink to non-existing file :-/
 					return null;
 				}
-			break;
+				break;
 			default: // some true wiki page
 				return new SMWExpData(SMWExporter::getResourceElement($this));
-			break;
+				break;
 		}
 	}
 
-///// special interface for wiki page values
+	///// special interface for wiki page values
 
 	/**
 	 * Return according Title object or NULL if no valid value was set.
@@ -318,7 +334,7 @@
 		if ($this->m_prefixedtext === false) {
 			$nstext = $wgContLang->getNSText($this->m_namespace);
 			$this->m_prefixedtext = $this->m_interwiki . ($this->m_interwiki != ''?':':'') .
-									$nstext . ($nstext != ''?':':'') . $this->m_textform;
+			$nstext . ($nstext != ''?':':'') . $this->m_textform;
 		}
 		return $this->m_prefixedtext;
 	}
@@ -361,15 +377,16 @@
 	 */
 	protected function getCaption() {
 		return $this->m_caption !== false?$this->m_caption:
-		       ($this->m_fixNamespace == NS_MAIN?$this->getPrefixedText():$this->getText());
+		($this->m_fixNamespace == NS_MAIN?$this->getPrefixedText():$this->getText());
 	}
 
 	/**
-	 * @deprecated Use setDBkeys()
-	 */
-	public function setValues($dbkey, $namespace, $id = false, $interwiki = '', $sortkey = '') {
-		$this->setDBkeys(array($dbkey,$namespace,$interwiki,$sortkey));
-	}
+     * @deprecated Use setDBkeys()
+     */
+
+    public function setValues($dbkey, $namespace, $id = false, $interwiki = '', $sortkey = '', $fragment = '') {
+        $this->setDBkeys(array($dbkey,$namespace,$interwiki,$sortkey, $fragment));
+    }
 
 }
 
Index: extensions/SemanticMediaWiki/includes/SMW_DataValue.php
===================================================================
--- extensions/SemanticMediaWiki/includes/SMW_DataValue.php	(revision 6679)
+++ extensions/SemanticMediaWiki/includes/SMW_DataValue.php	(working copy)
@@ -67,7 +67,19 @@
 	private $m_errors = array();
 	/// True if there were any errors
 	private $m_haserrors = false;
-
+    
+	/// Patch:KK|Provenance data|Start
+    private $m_provenance = NULL;
+    
+    public function setProvenance($provURI) {
+       $this->m_provenance = $provURI;
+    }
+   
+    public function getProvenance() {
+       return $this->m_provenance;
+    }
+    /// Patch:KK|Provenance data|End
+    
 	public function __construct($typeid) {
 		$this->m_typeid = $typeid;
 	}
Index: extensions/SemanticMediaWiki/skins/SMW_sorttable.js
===================================================================
--- extensions/SemanticMediaWiki/skins/SMW_sorttable.js	(revision 6546)
+++ extensions/SemanticMediaWiki/skins/SMW_sorttable.js	(working copy)
@@ -85,9 +85,9 @@
 	for (var i=0;i<spans.length;i++) {
 	    if(spans[i].className=="smwsortkey") return spans[i].innerHTML;
 	}
-    }else{
-	return el.innerHTML;	
     }
+	return el.innerHTML;	
+    
 
 }
 
Index: includes/Article.php
===================================================================
--- includes/Article.php	(revision 6546)
+++ includes/Article.php	(working copy)
@@ -3552,9 +3552,15 @@
 
 		$popts = $wgOut->parserOptions();
 		$popts->setTidy(true);
+		/*op-patch|TS|2009-06-19|SMWHalo|Parsing context|start*/
+        $popts->setParsingContext("Main article");
+		/*op-patch|TS|2009-06-19|end*/
 		$popts->enableLimitReport();
-		$parserOutput = $wgParser->parse( $text, $this->mTitle,
-			$popts, true, true, $this->getRevIdFetched() );
+		$parserOutput = $wgParser->parse($text, $this->mTitle,
+                                        $popts, true, true, $this->getRevIdFetched() );
+		/*op-patch|TS|2009-06-19|SMWHalo|Parsing context|start*/
+       $popts->setParsingContext("");
+		/*op-patch|TS|2009-06-19|end*/
 		$popts->setTidy(false);
 		$popts->enableLimitReport( false );
 		if( $wgEnableParserCache && $cache && $this && $parserOutput->getCacheTime() != -1 ) {
Index: includes/parser/ParserOptions.php
===================================================================
--- includes/parser/ParserOptions.php	(revision 6546)
+++ includes/parser/ParserOptions.php	(working copy)
@@ -30,6 +30,9 @@
 	var $mTemplateCallback;          # Callback for template fetching
 	var $mEnableLimitReport;         # Enable limit report in an HTML comment on output
 	var $mTimestamp;                 # Timestamp used for {{CURRENTDAY}} etc.
+	/*op-patch|TS|2009-06-19|SMWHalo|Parsing context|start*/
+    var $mParsingContext;           # Reason/context why the parser has been invoked
+	/*op-patch|TS|2009-06-19|end*/
 	var $mExternalLinkTarget;        # Target attribute for external links
 
 	var $mUser;                      # Stored user object, just used to initialise the skin
@@ -60,7 +63,11 @@
 	function getIsPreview()                     { return $this->mIsPreview; }
 	function getIsSectionPreview()              { return $this->mIsSectionPreview; }
   function getIsPrintable()            { return $this->mIsPrintable; }
-  
+  	
+  /*op-patch|TS|2009-06-19|SMWHalo|Parsing context|start*/
+   function getParsingContext()                { return $this->mParsingContext; }
+  /*op-patch|TS|2009-06-19|end*/
+   
 	function getSkin() {
 		if ( !isset( $this->mSkin ) ) {
 			$this->mSkin = $this->mUser->getSkin();
@@ -108,7 +115,11 @@
 	function setIsPreview( $x )                 { return wfSetVar( $this->mIsPreview, $x ); }
 	function setIsSectionPreview( $x )          { return wfSetVar( $this->mIsSectionPreview, $x ); }
   function setIsPrintable( $x )        { return wfSetVar( $this->mIsPrintable, $x ); }
-  
+  	
+    /*op-patch|TS|2009-06-19|SMWHalo|Parsing context|start*/
+    function setParsingContext($pc)             { return wfSetVar( $this->mParsingContext, $pc); }
+	/*op-patch|TS|2009-06-19|end*/
+   
 	function __construct( $user = null ) {
 		$this->initialiseFromUser( $user );
 	}
Index: includes/Linker.php
===================================================================
--- includes/Linker.php (revision 5486)
+++ includes/Linker.php (working copy)
@@ -243,6 +243,10 @@
 		and $target->getNamespace() != NS_SPECIAL ) {
 			$query['action'] = 'edit';
 			$query['redlink'] = '1';
+            global $IP;
+            if (file_exists($IP.'/extensions/FCKeditor/FCKeditor.php') &&
+                empty( $query['mode']))
+                $query['mode']= 'wysiwyg';
 		}
 		$ret = $target->getLinkUrl( $query );
 		wfProfileOut( __METHOD__ );

Index: includes/Namespace.php
===================================================================
--- includes/Namespace.php	(revision 5543)
+++ includes/Namespace.php	(working copy)
@@ -53,7 +53,17 @@
 	 */
 	public static function isMovable( $index ) {
 		global $wgAllowImageMoving;
-		return !( $index < NS_MAIN || ($index == NS_FILE && !$wgAllowImageMoving)  || $index == NS_CATEGORY );
+		/*op-patch|BL|2009-10-07|RichMedia|AdditionalNamespaceCheck|start*/
+		// NS_FILE is not the only Namespace now, so check them all
+		// original content is located in else statement.
+		global $smwgEnableRichMedia;
+		if( $smwgEnableRichMedia ) {
+			RMNamespace::isImage( $index, &$rMresult );
+			return !( $index < NS_MAIN || ($rMresult && !$wgAllowImageMoving) );
+		} else {
+			return !( $index < NS_MAIN || ($index == NS_FILE && !$wgAllowImageMoving) );
+		}
+		/*op-patch|BL|2009-10-07|end*/
 	}
 
 	/**
